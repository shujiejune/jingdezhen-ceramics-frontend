/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as EngageRouteImport } from './routes/engage'
import { Route as IndexRouteImport } from './routes/index'
import { Route as GalleryIndexRouteImport } from './routes/gallery/index'
import { Route as CeramicstoryIndexRouteImport } from './routes/ceramicstory/index'
import { Route as GalleryArtworkIdRouteImport } from './routes/gallery/$artworkId'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthLoginRouteImport } from './routes/auth/login'

const EngageRoute = EngageRouteImport.update({
  id: '/engage',
  path: '/engage',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const GalleryIndexRoute = GalleryIndexRouteImport.update({
  id: '/gallery/',
  path: '/gallery/',
  getParentRoute: () => rootRouteImport,
} as any)
const CeramicstoryIndexRoute = CeramicstoryIndexRouteImport.update({
  id: '/ceramicstory/',
  path: '/ceramicstory/',
  getParentRoute: () => rootRouteImport,
} as any)
const GalleryArtworkIdRoute = GalleryArtworkIdRouteImport.update({
  id: '/gallery/$artworkId',
  path: '/gallery/$artworkId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/engage': typeof EngageRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/gallery/$artworkId': typeof GalleryArtworkIdRoute
  '/ceramicstory': typeof CeramicstoryIndexRoute
  '/gallery': typeof GalleryIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/engage': typeof EngageRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/gallery/$artworkId': typeof GalleryArtworkIdRoute
  '/ceramicstory': typeof CeramicstoryIndexRoute
  '/gallery': typeof GalleryIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/engage': typeof EngageRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/gallery/$artworkId': typeof GalleryArtworkIdRoute
  '/ceramicstory/': typeof CeramicstoryIndexRoute
  '/gallery/': typeof GalleryIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/engage'
    | '/auth/login'
    | '/auth/signup'
    | '/gallery/$artworkId'
    | '/ceramicstory'
    | '/gallery'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/engage'
    | '/auth/login'
    | '/auth/signup'
    | '/gallery/$artworkId'
    | '/ceramicstory'
    | '/gallery'
  id:
    | '__root__'
    | '/'
    | '/engage'
    | '/auth/login'
    | '/auth/signup'
    | '/gallery/$artworkId'
    | '/ceramicstory/'
    | '/gallery/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EngageRoute: typeof EngageRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  GalleryArtworkIdRoute: typeof GalleryArtworkIdRoute
  CeramicstoryIndexRoute: typeof CeramicstoryIndexRoute
  GalleryIndexRoute: typeof GalleryIndexRoute
}

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/engage': {
      id: '/engage'
      path: '/engage'
      fullPath: '/engage'
      preLoaderRoute: typeof EngageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gallery/': {
      id: '/gallery/'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ceramicstory/': {
      id: '/ceramicstory/'
      path: '/ceramicstory'
      fullPath: '/ceramicstory'
      preLoaderRoute: typeof CeramicstoryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gallery/$artworkId': {
      id: '/gallery/$artworkId'
      path: '/gallery/$artworkId'
      fullPath: '/gallery/$artworkId'
      preLoaderRoute: typeof GalleryArtworkIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EngageRoute: EngageRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  GalleryArtworkIdRoute: GalleryArtworkIdRoute,
  CeramicstoryIndexRoute: CeramicstoryIndexRoute,
  GalleryIndexRoute: GalleryIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
