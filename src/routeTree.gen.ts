/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as GalleryIndexRouteImport } from './routes/gallery/index'
import { Route as ForumIndexRouteImport } from './routes/forum/index'
import { Route as EngageIndexRouteImport } from './routes/engage/index'
import { Route as CourseIndexRouteImport } from './routes/course/index'
import { Route as CeramicstoryIndexRouteImport } from './routes/ceramicstory/index'
import { Route as GalleryArtworkIdRouteImport } from './routes/gallery/$artworkId'
import { Route as ForumNewRouteImport } from './routes/forum/new'
import { Route as ForumPostIdRouteImport } from './routes/forum/$postId'
import { Route as EngageSlugRouteImport } from './routes/engage/$slug'
import { Route as CourseCourseIdRouteImport } from './routes/course/$courseId'
import { Route as CeramicstorySlugRouteImport } from './routes/ceramicstory/$slug'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as CourseCourseIdChaptersChapterIdBlocksBlockIdRouteImport } from './routes/course/$courseId/chapters/$chapterId/blocks/$blockId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const GalleryIndexRoute = GalleryIndexRouteImport.update({
  id: '/gallery/',
  path: '/gallery/',
  getParentRoute: () => rootRouteImport,
} as any)
const ForumIndexRoute = ForumIndexRouteImport.update({
  id: '/forum/',
  path: '/forum/',
  getParentRoute: () => rootRouteImport,
} as any)
const EngageIndexRoute = EngageIndexRouteImport.update({
  id: '/engage/',
  path: '/engage/',
  getParentRoute: () => rootRouteImport,
} as any)
const CourseIndexRoute = CourseIndexRouteImport.update({
  id: '/course/',
  path: '/course/',
  getParentRoute: () => rootRouteImport,
} as any)
const CeramicstoryIndexRoute = CeramicstoryIndexRouteImport.update({
  id: '/ceramicstory/',
  path: '/ceramicstory/',
  getParentRoute: () => rootRouteImport,
} as any)
const GalleryArtworkIdRoute = GalleryArtworkIdRouteImport.update({
  id: '/gallery/$artworkId',
  path: '/gallery/$artworkId',
  getParentRoute: () => rootRouteImport,
} as any)
const ForumNewRoute = ForumNewRouteImport.update({
  id: '/forum/new',
  path: '/forum/new',
  getParentRoute: () => rootRouteImport,
} as any)
const ForumPostIdRoute = ForumPostIdRouteImport.update({
  id: '/forum/$postId',
  path: '/forum/$postId',
  getParentRoute: () => rootRouteImport,
} as any)
const EngageSlugRoute = EngageSlugRouteImport.update({
  id: '/engage/$slug',
  path: '/engage/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const CourseCourseIdRoute = CourseCourseIdRouteImport.update({
  id: '/course/$courseId',
  path: '/course/$courseId',
  getParentRoute: () => rootRouteImport,
} as any)
const CeramicstorySlugRoute = CeramicstorySlugRouteImport.update({
  id: '/ceramicstory/$slug',
  path: '/ceramicstory/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CourseCourseIdChaptersChapterIdBlocksBlockIdRoute =
  CourseCourseIdChaptersChapterIdBlocksBlockIdRouteImport.update({
    id: '/chapters/$chapterId/blocks/$blockId',
    path: '/chapters/$chapterId/blocks/$blockId',
    getParentRoute: () => CourseCourseIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/ceramicstory/$slug': typeof CeramicstorySlugRoute
  '/course/$courseId': typeof CourseCourseIdRouteWithChildren
  '/engage/$slug': typeof EngageSlugRoute
  '/forum/$postId': typeof ForumPostIdRoute
  '/forum/new': typeof ForumNewRoute
  '/gallery/$artworkId': typeof GalleryArtworkIdRoute
  '/ceramicstory': typeof CeramicstoryIndexRoute
  '/course': typeof CourseIndexRoute
  '/engage': typeof EngageIndexRoute
  '/forum': typeof ForumIndexRoute
  '/gallery': typeof GalleryIndexRoute
  '/course/$courseId/chapters/$chapterId/blocks/$blockId': typeof CourseCourseIdChaptersChapterIdBlocksBlockIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/ceramicstory/$slug': typeof CeramicstorySlugRoute
  '/course/$courseId': typeof CourseCourseIdRouteWithChildren
  '/engage/$slug': typeof EngageSlugRoute
  '/forum/$postId': typeof ForumPostIdRoute
  '/forum/new': typeof ForumNewRoute
  '/gallery/$artworkId': typeof GalleryArtworkIdRoute
  '/ceramicstory': typeof CeramicstoryIndexRoute
  '/course': typeof CourseIndexRoute
  '/engage': typeof EngageIndexRoute
  '/forum': typeof ForumIndexRoute
  '/gallery': typeof GalleryIndexRoute
  '/course/$courseId/chapters/$chapterId/blocks/$blockId': typeof CourseCourseIdChaptersChapterIdBlocksBlockIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/ceramicstory/$slug': typeof CeramicstorySlugRoute
  '/course/$courseId': typeof CourseCourseIdRouteWithChildren
  '/engage/$slug': typeof EngageSlugRoute
  '/forum/$postId': typeof ForumPostIdRoute
  '/forum/new': typeof ForumNewRoute
  '/gallery/$artworkId': typeof GalleryArtworkIdRoute
  '/ceramicstory/': typeof CeramicstoryIndexRoute
  '/course/': typeof CourseIndexRoute
  '/engage/': typeof EngageIndexRoute
  '/forum/': typeof ForumIndexRoute
  '/gallery/': typeof GalleryIndexRoute
  '/course/$courseId/chapters/$chapterId/blocks/$blockId': typeof CourseCourseIdChaptersChapterIdBlocksBlockIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/login'
    | '/auth/signup'
    | '/ceramicstory/$slug'
    | '/course/$courseId'
    | '/engage/$slug'
    | '/forum/$postId'
    | '/forum/new'
    | '/gallery/$artworkId'
    | '/ceramicstory'
    | '/course'
    | '/engage'
    | '/forum'
    | '/gallery'
    | '/course/$courseId/chapters/$chapterId/blocks/$blockId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/auth/signup'
    | '/ceramicstory/$slug'
    | '/course/$courseId'
    | '/engage/$slug'
    | '/forum/$postId'
    | '/forum/new'
    | '/gallery/$artworkId'
    | '/ceramicstory'
    | '/course'
    | '/engage'
    | '/forum'
    | '/gallery'
    | '/course/$courseId/chapters/$chapterId/blocks/$blockId'
  id:
    | '__root__'
    | '/'
    | '/auth/login'
    | '/auth/signup'
    | '/ceramicstory/$slug'
    | '/course/$courseId'
    | '/engage/$slug'
    | '/forum/$postId'
    | '/forum/new'
    | '/gallery/$artworkId'
    | '/ceramicstory/'
    | '/course/'
    | '/engage/'
    | '/forum/'
    | '/gallery/'
    | '/course/$courseId/chapters/$chapterId/blocks/$blockId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  CeramicstorySlugRoute: typeof CeramicstorySlugRoute
  CourseCourseIdRoute: typeof CourseCourseIdRouteWithChildren
  EngageSlugRoute: typeof EngageSlugRoute
  ForumPostIdRoute: typeof ForumPostIdRoute
  ForumNewRoute: typeof ForumNewRoute
  GalleryArtworkIdRoute: typeof GalleryArtworkIdRoute
  CeramicstoryIndexRoute: typeof CeramicstoryIndexRoute
  CourseIndexRoute: typeof CourseIndexRoute
  EngageIndexRoute: typeof EngageIndexRoute
  ForumIndexRoute: typeof ForumIndexRoute
  GalleryIndexRoute: typeof GalleryIndexRoute
}

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gallery/': {
      id: '/gallery/'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forum/': {
      id: '/forum/'
      path: '/forum'
      fullPath: '/forum'
      preLoaderRoute: typeof ForumIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/engage/': {
      id: '/engage/'
      path: '/engage'
      fullPath: '/engage'
      preLoaderRoute: typeof EngageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/course/': {
      id: '/course/'
      path: '/course'
      fullPath: '/course'
      preLoaderRoute: typeof CourseIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ceramicstory/': {
      id: '/ceramicstory/'
      path: '/ceramicstory'
      fullPath: '/ceramicstory'
      preLoaderRoute: typeof CeramicstoryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gallery/$artworkId': {
      id: '/gallery/$artworkId'
      path: '/gallery/$artworkId'
      fullPath: '/gallery/$artworkId'
      preLoaderRoute: typeof GalleryArtworkIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forum/new': {
      id: '/forum/new'
      path: '/forum/new'
      fullPath: '/forum/new'
      preLoaderRoute: typeof ForumNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forum/$postId': {
      id: '/forum/$postId'
      path: '/forum/$postId'
      fullPath: '/forum/$postId'
      preLoaderRoute: typeof ForumPostIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/engage/$slug': {
      id: '/engage/$slug'
      path: '/engage/$slug'
      fullPath: '/engage/$slug'
      preLoaderRoute: typeof EngageSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/course/$courseId': {
      id: '/course/$courseId'
      path: '/course/$courseId'
      fullPath: '/course/$courseId'
      preLoaderRoute: typeof CourseCourseIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ceramicstory/$slug': {
      id: '/ceramicstory/$slug'
      path: '/ceramicstory/$slug'
      fullPath: '/ceramicstory/$slug'
      preLoaderRoute: typeof CeramicstorySlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/course/$courseId/chapters/$chapterId/blocks/$blockId': {
      id: '/course/$courseId/chapters/$chapterId/blocks/$blockId'
      path: '/chapters/$chapterId/blocks/$blockId'
      fullPath: '/course/$courseId/chapters/$chapterId/blocks/$blockId'
      preLoaderRoute: typeof CourseCourseIdChaptersChapterIdBlocksBlockIdRouteImport
      parentRoute: typeof CourseCourseIdRoute
    }
  }
}

interface CourseCourseIdRouteChildren {
  CourseCourseIdChaptersChapterIdBlocksBlockIdRoute: typeof CourseCourseIdChaptersChapterIdBlocksBlockIdRoute
}

const CourseCourseIdRouteChildren: CourseCourseIdRouteChildren = {
  CourseCourseIdChaptersChapterIdBlocksBlockIdRoute:
    CourseCourseIdChaptersChapterIdBlocksBlockIdRoute,
}

const CourseCourseIdRouteWithChildren = CourseCourseIdRoute._addFileChildren(
  CourseCourseIdRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  CeramicstorySlugRoute: CeramicstorySlugRoute,
  CourseCourseIdRoute: CourseCourseIdRouteWithChildren,
  EngageSlugRoute: EngageSlugRoute,
  ForumPostIdRoute: ForumPostIdRoute,
  ForumNewRoute: ForumNewRoute,
  GalleryArtworkIdRoute: GalleryArtworkIdRoute,
  CeramicstoryIndexRoute: CeramicstoryIndexRoute,
  CourseIndexRoute: CourseIndexRoute,
  EngageIndexRoute: EngageIndexRoute,
  ForumIndexRoute: ForumIndexRoute,
  GalleryIndexRoute: GalleryIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
